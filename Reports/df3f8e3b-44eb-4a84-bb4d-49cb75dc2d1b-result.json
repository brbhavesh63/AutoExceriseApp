{"name": "test_signup", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[text()=\" Logged in as \"]\"}\n  (Session info: chrome=133.0.6943.98); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x007E02D3+25139]\n\t(No symbol) [0x0076B284]\n\t(No symbol) [0x006404A3]\n\t(No symbol) [0x00688338]\n\t(No symbol) [0x0068868B]\n\t(No symbol) [0x006D0F62]\n\t(No symbol) [0x006ACF84]\n\t(No symbol) [0x006CE6E1]\n\t(No symbol) [0x006ACD36]\n\t(No symbol) [0x0067BD29]\n\t(No symbol) [0x0067D064]\n\tGetHandleVerifier [0x00AEB193+3215603]\n\tGetHandleVerifier [0x00B0230A+3310186]\n\tGetHandleVerifier [0x00AFC522+3286146]\n\tGetHandleVerifier [0x00879CD0+654384]\n\t(No symbol) [0x0077460D]\n\t(No symbol) [0x007714F8]\n\t(No symbol) [0x00771697]\n\t(No symbol) [0x00763D70]\n\tBaseThreadInitThunk [0x76625D49+25]\n\tRtlInitializeExceptionChain [0x77A1CEBB+107]\n\tRtlGetAppContainerNamedObjectPath [0x77A1CE41+561]", "trace": "self = <TestCases.test_Test01.Test_001_Signup object at 0x00000188F4FEE0D0>, setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5b1abe2d3a31721a9f70044ef9502551\")>\n\n    @pytest.mark.sanity\n    @pytest.mark.regression\n    def test_signup(self,setup):\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.hp = HomePage(self.driver)\n        self.hp.verifyTitle()\n        self.hp.clickSignupLogin()\n        self.rp = RegisterPage(self.driver)\n        self.rp.signupDisplayed()\n        self.rp.setName(self.name)\n        self.rp.setEmail(self.email)\n        self.rp.clickSignup()\n        self.rp.accountInfoDisplayed()\n        self.rp.clickRadio()\n        self.rp.setPassword(self.password)\n        self.rp.setBirthdate(self.day,self.month,self.year)\n        self.rp.clickCheckbnox()\n        self.rp.setFirstName(self.firstname)\n        self.rp.setLastName(self.lastname)\n        self.rp.setAddress(self.address)\n        self.rp.setState(self.state)\n        self.rp.setCity(self.city)\n        self.rp.setZipcode(self.zipcode)\n        self.rp.setMobile(self.mobile)\n        self.rp.clickCreateAccount()\n        self.rp.checkAccountCreatedtxtvisibile()\n        self.rp.clickContinue()\n>       self.rp.verifyLoggedinUser()\n\nTestCases\\test_Test01.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\ReigsterPage.py:139: in verifyLoggedinUser\n    loggedinuser = self.driver.find_element(By.XPATH, self.btn_loggedinuser_xpath)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:888: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000188F561C590>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77A1CEBB+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77A1CE41+561]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[text()=\" Logged in as \"]\"}\nE         (Session info: chrome=133.0.6943.98); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x007E02D3+25139]\nE       \t(No symbol) [0x0076B284]\nE       \t(No symbol) [0x006404A3]\nE       \t(No symbol) [0x00688338]\nE       \t(No symbol) [0x0068868B]\nE       \t(No symbol) [0x006D0F62]\nE       \t(No symbol) [0x006ACF84]\nE       \t(No symbol) [0x006CE6E1]\nE       \t(No symbol) [0x006ACD36]\nE       \t(No symbol) [0x0067BD29]\nE       \t(No symbol) [0x0067D064]\nE       \tGetHandleVerifier [0x00AEB193+3215603]\nE       \tGetHandleVerifier [0x00B0230A+3310186]\nE       \tGetHandleVerifier [0x00AFC522+3286146]\nE       \tGetHandleVerifier [0x00879CD0+654384]\nE       \t(No symbol) [0x0077460D]\nE       \t(No symbol) [0x007714F8]\nE       \t(No symbol) [0x00771697]\nE       \t(No symbol) [0x00763D70]\nE       \tBaseThreadInitThunk [0x76625D49+25]\nE       \tRtlInitializeExceptionChain [0x77A1CEBB+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x77A1CE41+561]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "start": 1739689696408, "stop": 1739689838380, "uuid": "428d0767-2a9b-40dc-b2d6-d7eb45c2281b", "historyId": "24bbc669eee97bb4d778da606347e5af", "testCaseId": "24bbc669eee97bb4d778da606347e5af", "fullName": "TestCases.test_Test01.Test_001_Signup#test_signup", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "sanity"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_Test01"}, {"name": "subSuite", "value": "Test_001_Signup"}, {"name": "host", "value": "LAPTOP-IKLIJN10"}, {"name": "thread", "value": "11280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_Test01"}]}